<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Converter | JPG to PNG</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .dropzone {
            border: 2px dashed #cbd5e0;
            transition: all 0.3s ease;
        }
        .dropzone.active {
            border-color: #4f46e5;
            background-color: #eef2ff;
        }
        #previewImage {
            max-height: 300px;
            object-fit: contain;
        }
        .progress-bar {
            height: 6px;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-12 max-w-3xl">
        <div class="text-center mb-10">
            <h1 class="text-4xl font-bold text-indigo-600 mb-2">Image Converter</h1>
            <p class="text-xl text-gray-600">Convert your JPG images to PNG format instantly</p>
        </div>

        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <div class="p-6">
                <div id="uploadSection" class="mb-8">
                    <div id="dropzone" class="dropzone rounded-lg p-8 text-center cursor-pointer">
                        <div class="flex flex-col items-center justify-center space-y-4">
                            <div class="w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center">
                                <i class="fas fa-cloud-upload-alt text-3xl text-indigo-500"></i>
                            </div>
                            <h3 class="text-lg font-medium text-gray-700">Drag & drop your JPG file here</h3>
                            <p class="text-gray-500">or</p>
                            <label for="fileInput" class="px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition cursor-pointer">
                                <i class="fas fa-folder-open mr-2"></i> Browse Files
                            </label>
                            <input type="file" id="fileInput" class="hidden" accept="image/jpeg,image/jpg">
                            <p class="text-sm text-gray-500 mt-2">Supports: .jpg, .jpeg (Max 5MB)</p>
                        </div>
                    </div>
                </div>

                <div id="previewSection" class="hidden mb-8">
                    <div class="flex flex-col md:flex-row gap-6">
                        <div class="flex-1">
                            <h3 class="text-lg font-medium text-gray-700 mb-3">Original (JPG)</h3>
                            <div class="border rounded-lg p-4 bg-gray-50 flex items-center justify-center">
                                <img id="previewImage" src="#" alt="Preview" class="hidden rounded">
                                <div id="noPreview" class="text-gray-400 py-10">
                                    <i class="fas fa-image text-4xl mb-2"></i>
                                    <p>No preview available</p>
                                </div>
                            </div>
                        </div>
                        <div class="flex items-center justify-center">
                            <div class="bg-gray-200 rounded-full p-3">
                                <i class="fas fa-arrow-right text-gray-600 text-xl"></i>
                            </div>
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-medium text-gray-700 mb-3">Converted (PNG)</h3>
                            <div class="border rounded-lg p-4 bg-gray-50 flex items-center justify-center">
                                <canvas id="convertedCanvas" class="hidden rounded"></canvas>
                                <div id="noConverted" class="text-gray-400 py-10">
                                    <i class="fas fa-file-image text-4xl mb-2"></i>
                                    <p>PNG will appear here</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="progressSection" class="hidden mb-6">
                    <div class="flex items-center justify-between mb-1">
                        <span class="text-sm font-medium text-gray-700">Converting...</span>
                        <span id="progressPercent" class="text-sm font-medium text-gray-700">0%</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                        <div id="progressBar" class="progress-bar bg-indigo-600 rounded-full" style="width: 0%"></div>
                    </div>
                </div>

                <div id="actionSection" class="hidden flex flex-col sm:flex-row gap-3 justify-center">
                    <button id="convertBtn" class="px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition flex items-center justify-center">
                        <i class="fas fa-sync-alt mr-2"></i> Convert to PNG
                    </button>
                    <button id="downloadBtn" class="px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition flex items-center justify-center">
                        <i class="fas fa-download mr-2"></i> Download PNG
                    </button>
                    <button id="resetBtn" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition flex items-center justify-center">
                        <i class="fas fa-redo mr-2"></i> Start Over
                    </button>
                </div>
            </div>

            <div class="bg-gray-50 px-6 py-4 border-t">
                <div class="flex items-center justify-between">
                    <div class="text-sm text-gray-500">
                        <i class="fas fa-info-circle mr-1"></i> Your files are processed locally in your browser.
                    </div>
                    <div class="flex space-x-4">
                        <a href="#" class="text-gray-500 hover:text-indigo-600"><i class="fab fa-github"></i></a>
                        <a href="#" class="text-gray-500 hover:text-indigo-600"><i class="fas fa-question-circle"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const fileInput = document.getElementById('fileInput');
            const dropzone = document.getElementById('dropzone');
            const previewImage = document.getElementById('previewImage');
            const noPreview = document.getElementById('noPreview');
            const convertedCanvas = document.getElementById('convertedCanvas');
            const noConverted = document.getElementById('noConverted');
            const convertBtn = document.getElementById('convertBtn');
            const downloadBtn = document.getElementById('downloadBtn');
            const resetBtn = document.getElementById('resetBtn');
            const progressSection = document.getElementById('progressSection');
            const progressBar = document.getElementById('progressBar');
            const progressPercent = document.getElementById('progressPercent');
            const uploadSection = document.getElementById('uploadSection');
            const previewSection = document.getElementById('previewSection');
            const actionSection = document.getElementById('actionSection');
            
            let currentFile = null;

            // Drag and drop events
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropzone.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropzone.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropzone.classList.add('active');
            }

            function unhighlight() {
                dropzone.classList.remove('active');
            }

            dropzone.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                if (files.length) {
                    handleFiles(files);
                }
            }

            // File input change event
            fileInput.addEventListener('change', function() {
                if (this.files.length) {
                    handleFiles(this.files);
                }
            });

            // Handle selected files
            function handleFiles(files) {
                const file = files[0];
                
                // Check if file is an image
                if (!file.type.match('image/jpeg') && !file.type.match('image/jpg')) {
                    alert('Please select a JPG/JPEG image file.');
                    return;
                }
                
                // Check file size (max 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size exceeds 5MB limit.');
                    return;
                }
                
                currentFile = file;
                
                // Show preview
                const reader = new FileReader();
                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    previewImage.classList.remove('hidden');
                    noPreview.classList.add('hidden');
                    
                    // Show sections
                    uploadSection.classList.add('hidden');
                    previewSection.classList.remove('hidden');
                    actionSection.classList.remove('hidden');
                };
                reader.readAsDataURL(file);
            }

            // Convert button click event
            convertBtn.addEventListener('click', function() {
                if (!currentFile) return;
                
                // Show progress
                progressSection.classList.remove('hidden');
                convertBtn.disabled = true;
                
                // Simulate progress (in a real app, this would be the actual conversion progress)
                let progress = 0;
                const interval = setInterval(() => {
                    progress += 5;
                    if (progress > 100) progress = 100;
                    
                    progressBar.style.width = `${progress}%`;
                    progressPercent.textContent = `${progress}%`;
                    
                    if (progress === 100) {
                        clearInterval(interval);
                        convertImage();
                    }
                }, 50);
            });

            // Convert image to PNG
            function convertImage() {
                const img = new Image();
                img.onload = function() {
                    // Create canvas with same dimensions as image
                    convertedCanvas.width = img.width;
                    convertedCanvas.height = img.height;
                    
                    // Draw image on canvas
                    const ctx = convertedCanvas.getContext('2d');
                    ctx.drawImage(img, 0, 0);
                    
                    // Show converted image
                    convertedCanvas.classList.remove('hidden');
                    noConverted.classList.add('hidden');
                    
                    // Enable download button
                    downloadBtn.disabled = false;
                    progressSection.classList.add('hidden');
                };
                img.src = URL.createObjectURL(currentFile);
            }

            // Download button click event
            downloadBtn.addEventListener('click', function() {
                if (!convertedCanvas.classList.contains('hidden')) {
                    // Create download link
                    const link = document.createElement('a');
                    link.download = currentFile.name.replace(/\.[^/.]+$/, '') + '.png';
                    link.href = convertedCanvas.toDataURL('image/png');
                    link.click();
                }
            });

            // Reset button click event
            resetBtn.addEventListener('click', function() {
                // Reset everything
                previewImage.src = '#';
                previewImage.classList.add('hidden');
                noPreview.classList.remove('hidden');
                convertedCanvas.classList.add('hidden');
                noConverted.classList.remove('hidden');
                progressBar.style.width = '0%';
                progressPercent.textContent = '0%';
                
                // Hide/show sections
                uploadSection.classList.remove('hidden');
                previewSection.classList.add('hidden');
                actionSection.classList.add('hidden');
                progressSection.classList.add('hidden');
                
                // Reset file input
                fileInput.value = '';
                currentFile = null;
                convertBtn.disabled = false;
                downloadBtn.disabled = false;
            });
        });
    </script>
</body>
</html>
